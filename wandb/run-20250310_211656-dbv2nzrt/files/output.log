Number of response logs 24000
[Epoch 1]
Training:   0%|                                                             | 0/150 [00:00<?, ?it/s]d:\Git\Over-estimate\inscd\_unifier.py:31: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  r:torch.Tensor=torch.tensor(r,dtype=torch.int64)
Training: 100%|███████████████████████████████████████████████████| 150/150 [00:02<00:00, 74.20it/s]
Average loss: 1.6516106405978401
Evaluating:   0%|                                                            | 0/38 [00:00<?, ?it/s]
Traceback (most recent call last):
  File "d:\Git\Over-estimate\run.py", line 76, in <module>
    sys.exit(main(config_dict))
             ^^^^^^^^^^^^^^^^^
  File "d:\Git\Over-estimate\run.py", line 71, in main
    ncdm.train(datahub, "train", "test", valid_metrics=validate_metrics, batch_size=config['batch_size'],epoch=config['epoch'], lr=2e-3)
  File "d:\Git\Over-estimate\inscd\models\static\neural\ncdm.py", line 59, in train
    self._train(datahub=datahub, set_type=set_type,
  File "d:\Git\Over-estimate\inscd\_base.py", line 52, in _train
    self.score(datahub, valid_set_type, valid_metrics, **kwargs)
  File "d:\Git\Over-estimate\inscd\models\static\neural\ncdm.py", line 71, in score
    return self._score(datahub=datahub, set_type=set_type, metrics=metrics, batch_size=batch_size)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\Git\Over-estimate\inscd\_listener.py", line 33, in wrapper
    result = self.__format(func(*args, **kwargs))
                           ^^^^^^^^^^^^^^^^^^^^^
  File "d:\Git\Over-estimate\inscd\_base.py", line 66, in _score
    pred_r = unifier.predict(datahub, set_type, self.extractor, self.inter_func, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\Git\Over-estimate\inscd\_unifier.py", line 75, in predict
    student_id, exercise_id, q_mask,S,theta_tuda = batch_data
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: not enough values to unpack (expected 5, got 4)
